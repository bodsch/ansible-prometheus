---

prometheus_version: 2.35.0

prometheus_release_download_url: https://github.com/prometheus/prometheus/releases

prometheus_system_user: prometheus
prometheus_system_group: prometheus
prometheus_config_dir: /etc/prometheus
prometheus_data_dir: /var/lib/prometheus

prometheus_enable_experimental: false

prometheus_direct_download: false

prometheus_service: {}

prometheus_global: {}

prometheus_alerting: {}

prometheus_rule_files:
  - "{{ prometheus_config_dir }}/rules/*.rules"

prometheus_alert_rules:
  watchdog:
    alert: Watchdog
    expr: vector(1)
    for: 10m
    labels:
      severity: information
    annotations:
      description: |
        This is an alert meant to ensure that the entire alerting pipeline is functional.
        This alert is always firing, therefore it should always be firing in Alertmanager
        and always fire against a receiver.
        There are integrations with various notification mechanisms that send a notification when this alert is not firing.
        For example the

        "DeadMansSnitch" integration in PagerDuty.

      summary: 'Ensure entire alerting pipeline is functional'

prometheus_scrape_configs:
  - job_name: prometheus
    file_sd_configs:
      - files:
          - "{{ prometheus_config_dir }}/file_sd/prometheus.yml"
    relabel_configs:
      - source_labels:
          - __address__
        target_label: instance
        regex: "([^:]+)(:[0-9]+)?"
        replacement: "${1}"

prometheus_remote_write: {}

prometheus_remote_read: {}

prometheus_storage: {}

prometheus_tracing: {}

prometheus_file_sd_targets:
  prometheus:
    - targets:
        - 127.0.0.1:9090
      labels:
        service: prometheus
        host: "{{ ansible_hostname }}"

# prometheus_web:
#   http_listen_address: "0.0.0.0"
#   http_listen_port: "9090"
#   telemetry_path: "/metrics"
#   external_url: ""
#
# prometheus_storage:
#   retention: "30d"
#   # Available since Prometheus 2.7.0
#   # [EXPERIMENTAL] Maximum number of bytes that can be stored for blocks.
#   # Units supported: KB, MB, GB, TB, PB.
#   retention_size: "0"

...
