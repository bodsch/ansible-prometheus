
{% if prometheus_scrape_configs is defined and
      prometheus_scrape_configs | count > 0 %}
scrape_configs:
  {{ prometheus_scrape_configs | to_nice_yaml(indent=2,sort_keys=False) | indent(2, False) }}
{% endif %}

{#
  a complete wallpaper with all possible configuration parameters of a single scrape job
scrape_configs:
  [ - <scrape_config> ... ]
  # The job name assigned to scraped metrics by default.
  job_name: <job_name>

  # How frequently to scrape targets from this job.
  [ scrape_interval: <duration> | default = <global_config.scrape_interval> ]

  # Per-scrape timeout when scraping this job.
  [ scrape_timeout: <duration> | default = <global_config.scrape_timeout> ]

  # The HTTP resource path on which to fetch metrics from targets.
  [ metrics_path: <path> | default = /metrics ]

  # honor_labels controls how Prometheus handles conflicts between labels that are
  # already present in scraped data and labels that Prometheus would attach
  # server-side ("job" and "instance" labels, manually configured target
  # labels, and labels generated by service discovery implementations).
  #
  # If honor_labels is set to "true", label conflicts are resolved by keeping label
  # values from the scraped data and ignoring the conflicting server-side labels.
  #
  # If honor_labels is set to "false", label conflicts are resolved by renaming
  # conflicting labels in the scraped data to "exported_<original-label>" (for
  # example "exported_instance", "exported_job") and then attaching server-side
  # labels.
  #
  # Setting honor_labels to "true" is useful for use cases such as federation and
  # scraping the Pushgateway, where all labels specified in the target should be
  # preserved.
  #
  # Note that any globally configured "external_labels" are unaffected by this
  # setting. In communication with external systems, they are always applied only
  # when a time series does not have a given label yet and are ignored otherwise.
  [ honor_labels: <boolean> | default = false ]

  # honor_timestamps controls whether Prometheus respects the timestamps present
  # in scraped data.
  #
  # If honor_timestamps is set to "true", the timestamps of the metrics exposed
  # by the target will be used.
  #
  # If honor_timestamps is set to "false", the timestamps of the metrics exposed
  # by the target will be ignored.
  [ honor_timestamps: <boolean> | default = true ]

  # Configures the protocol scheme used for requests.
  [ scheme: <scheme> | default = http ]

  # Optional HTTP URL parameters.
  params:
    [ <string>: [<string>, ...] ]

  # Sets the `Authorization` header on every scrape request with the
  # configured username and password.
  # password and password_file are mutually exclusive.
  basic_auth:
    [ username: <string> ]
    [ password: <secret> ]
    [ password_file: <string> ]

  # Sets the `Authorization` header on every scrape request with
  # the configured credentials.
  authorization:
    # Sets the authentication type of the request.
    [ type: <string> | default: Bearer ]
    # Sets the credentials of the request. It is mutually exclusive with
    # `credentials_file`.
    [ credentials: <secret> ]
    # Sets the credentials of the request with the credentials read from the
    # configured file. It is mutually exclusive with `credentials`.
    [ credentials_file: <filename> ]

  # Optional OAuth 2.0 configuration.
  # Cannot be used at the same time as basic_auth or authorization.
  oauth2:
    [ <oauth2> ]
    client_id: <string>
    [ client_secret: <secret> ]

    # Read the client secret from a file.
    # It is mutually exclusive with `client_secret`.
    [ client_secret_file: <filename> ]

    # Scopes for the token request.
    scopes:
      [ - <string> ... ]

    # The URL to fetch the token from.
    token_url: <string>

    # Optional parameters to append to the token URL.
    endpoint_params:
      [ <string>: <string> ... ]

    # Configures the token request's TLS settings.
    tls_config:
      [ <tls_config> ]
      # CA certificate to validate API server certificate with.
      [ ca_file: <filename> ]

      # Certificate and key files for client cert authentication to the server.
      [ cert_file: <filename> ]
      [ key_file: <filename> ]

      # ServerName extension to indicate the name of the server.
      # https://tools.ietf.org/html/rfc4366#section-3.1
      [ server_name: <string> ]

      # Disable validation of the server certificate.
      [ insecure_skip_verify: <boolean> ]

      # Minimum acceptable TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS
      # 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3).
      # If unset, Prometheus will use Go default minimum version, which is TLS 1.2.
      # See MinVersion in https://pkg.go.dev/crypto/tls#Config.
      [ min_version: <string> ]

    # Optional proxy URL.
    [ proxy_url: <string> ]

  # Configure whether scrape requests follow HTTP 3xx redirects.
  [ follow_redirects: <boolean> | default = true ]

  # Whether to enable HTTP2.
  [ enable_http2: <bool> | default: true ]

  # Configures the scrape request's TLS settings.
  tls_config:
    [ <tls_config> ]
    # CA certificate to validate API server certificate with.
    [ ca_file: <filename> ]

    # Certificate and key files for client cert authentication to the server.
    [ cert_file: <filename> ]
    [ key_file: <filename> ]

    # ServerName extension to indicate the name of the server.
    # https://tools.ietf.org/html/rfc4366#section-3.1
    [ server_name: <string> ]

    # Disable validation of the server certificate.
    [ insecure_skip_verify: <boolean> ]

    # Minimum acceptable TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS
    # 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3).
    # If unset, Prometheus will use Go default minimum version, which is TLS 1.2.
    # See MinVersion in https://pkg.go.dev/crypto/tls#Config.
    [ min_version: <string> ]

  # Optional proxy URL.
  [ proxy_url: <string> ]

  # List of Azure service discovery configurations.
  azure_sd_configs:
    [ - <azure_sd_config> ... ]

  # List of Consul service discovery configurations.
  consul_sd_configs:
    [ - <consul_sd_config> ... ]
    # The information to access the Consul API. It is to be defined
    # as the Consul documentation requires.
    [ server: <host> | default = "localhost:8500" ]
    [ token: <secret> ]
    [ datacenter: <string> ]
    # Namespaces are only supported in Consul Enterprise.
    [ namespace: <string> ]
    [ scheme: <string> | default = "http" ]
    # The username and password fields are deprecated in favor of the basic_auth configuration.
    [ username: <string> ]
    [ password: <secret> ]

    # A list of services for which targets are retrieved. If omitted, all services
    # are scraped.
    services:
      [ - <string> ]

    # See https://www.consul.io/api/catalog.html#list-nodes-for-service to know more
    # about the possible filters that can be used.

    # An optional list of tags used to filter nodes for a given service. Services must contain all tags in the list.
    tags:
      [ - <string> ]

    # Node metadata key/value pairs to filter nodes for a given service.
    [ node_meta:
      [ <string>: <string> ... ] ]

    # The string by which Consul tags are joined into the tag label.
    [ tag_separator: <string> | default = , ]

    # Allow stale Consul results (see https://www.consul.io/api/features/consistency.html). Will reduce load on Consul.
    [ allow_stale: <boolean> | default = true ]

    # The time after which the provided names are refreshed.
    # On large setup it might be a good idea to increase this value because the catalog will change all the time.
    [ refresh_interval: <duration> | default = 30s ]

    # Authentication information used to authenticate to the consul server.
    # Note that `basic_auth`, `authorization` and `oauth2` options are
    # mutually exclusive.
    # `password` and `password_file` are mutually exclusive.

    # Optional HTTP basic authentication information.
    basic_auth:
      [ username: <string> ]
      [ password: <secret> ]
      [ password_file: <string> ]

    # Optional `Authorization` header configuration.
    authorization:
      # Sets the authentication type.
      [ type: <string> | default: Bearer ]
      # Sets the credentials. It is mutually exclusive with
      # `credentials_file`.
      [ credentials: <secret> ]
      # Sets the credentials to the credentials read from the configured file.
      # It is mutually exclusive with `credentials`.
      [ credentials_file: <filename> ]

    # Optional OAuth 2.0 configuration.
    oauth2:
      [ <oauth2> ]
      client_id: <string>
      [ client_secret: <secret> ]

      # Read the client secret from a file.
      # It is mutually exclusive with `client_secret`.
      [ client_secret_file: <filename> ]

      # Scopes for the token request.
      scopes:
        [ - <string> ... ]

      # The URL to fetch the token from.
      token_url: <string>

      # Optional parameters to append to the token URL.
      endpoint_params:
        [ <string>: <string> ... ]

      # Configures the token request's TLS settings.
      tls_config:
        [ <tls_config> ]
        # CA certificate to validate API server certificate with.
        [ ca_file: <filename> ]

        # Certificate and key files for client cert authentication to the server.
        [ cert_file: <filename> ]
        [ key_file: <filename> ]

        # ServerName extension to indicate the name of the server.
        # https://tools.ietf.org/html/rfc4366#section-3.1
        [ server_name: <string> ]

        # Disable validation of the server certificate.
        [ insecure_skip_verify: <boolean> ]

        # Minimum acceptable TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS
        # 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3).
        # If unset, Prometheus will use Go default minimum version, which is TLS 1.2.
        # See MinVersion in https://pkg.go.dev/crypto/tls#Config.
        [ min_version: <string> ]

      # Optional proxy URL.
      [ proxy_url: <string> ]

    # Optional proxy URL.
    [ proxy_url: <string> ]

    # Configure whether HTTP requests follow HTTP 3xx redirects.
    [ follow_redirects: <boolean> | default = true ]

    # Whether to enable HTTP2.
    [ enable_http2: <bool> | default: true ]

    # TLS configuration.
    tls_config:
      [ <tls_config> ]
      # CA certificate to validate API server certificate with.
      [ ca_file: <filename> ]

      # Certificate and key files for client cert authentication to the server.
      [ cert_file: <filename> ]
      [ key_file: <filename> ]

      # ServerName extension to indicate the name of the server.
      # https://tools.ietf.org/html/rfc4366#section-3.1
      [ server_name: <string> ]

      # Disable validation of the server certificate.
      [ insecure_skip_verify: <boolean> ]

      # Minimum acceptable TLS version. Accepted values: TLS10 (TLS 1.0), TLS11 (TLS
      # 1.1), TLS12 (TLS 1.2), TLS13 (TLS 1.3).
      # If unset, Prometheus will use Go default minimum version, which is TLS 1.2.
      # See MinVersion in https://pkg.go.dev/crypto/tls#Config.
      [ min_version: <string> ]

  # List of DigitalOcean service discovery configurations.
  digitalocean_sd_configs:
    [ - <digitalocean_sd_config> ... ]

  # List of Docker service discovery configurations.
  docker_sd_configs:
    [ - <docker_sd_config> ... ]

  # List of Docker Swarm service discovery configurations.
  dockerswarm_sd_configs:
    [ - <dockerswarm_sd_config> ... ]

  # List of DNS service discovery configurations.
  dns_sd_configs:
    [ - <dns_sd_config> ... ]
    # A list of DNS domain names to be queried.
    names:
      [ - <string> ]

    # The type of DNS query to perform. One of SRV, A, or AAAA.
    [ type: <string> | default = 'SRV' ]

    # The port number used if the query type is not SRV.
    [ port: <int>]

    # The time after which the provided names are refreshed.
    [ refresh_interval: <duration> | default = 30s ]

  # List of EC2 service discovery configurations.
  ec2_sd_configs:
    [ - <ec2_sd_config> ... ]

  # List of Eureka service discovery configurations.
  eureka_sd_configs:
    [ - <eureka_sd_config> ... ]

  # List of file service discovery configurations.
  file_sd_configs:
    [ - <file_sd_config> ... ]
    # Patterns for files from which target groups are extracted.
    files:
      [ - <filename_pattern> ... ]

    # Refresh interval to re-read the files.
    [ refresh_interval: <duration> | default = 5m ]

  # List of GCE service discovery configurations.
  gce_sd_configs:
    [ - <gce_sd_config> ... ]

  # List of Hetzner service discovery configurations.
  hetzner_sd_configs:
    [ - <hetzner_sd_config> ... ]

  # List of HTTP service discovery configurations.
  http_sd_configs:
    [ - <http_sd_config> ... ]

  # List of Kubernetes service discovery configurations.
  kubernetes_sd_configs:
    [ - <kubernetes_sd_config> ... ]

  # List of Kuma service discovery configurations.
  kuma_sd_configs:
    [ - <kuma_sd_config> ... ]

  # List of Lightsail service discovery configurations.
  lightsail_sd_configs:
    [ - <lightsail_sd_config> ... ]

  # List of Linode service discovery configurations.
  linode_sd_configs:
    [ - <linode_sd_config> ... ]

  # List of Marathon service discovery configurations.
  marathon_sd_configs:
    [ - <marathon_sd_config> ... ]

  # List of AirBnB's Nerve service discovery configurations.
  nerve_sd_configs:
    [ - <nerve_sd_config> ... ]

  # List of OpenStack service discovery configurations.
  openstack_sd_configs:
    [ - <openstack_sd_config> ... ]

  # List of PuppetDB service discovery configurations.
  puppetdb_sd_configs:
    [ - <puppetdb_sd_config> ... ]

  # List of Scaleway service discovery configurations.
  scaleway_sd_configs:
    [ - <scaleway_sd_config> ... ]

  # List of Zookeeper Serverset service discovery configurations.
  serverset_sd_configs:
    [ - <serverset_sd_config> ... ]

  # List of Triton service discovery configurations.
  triton_sd_configs:
    [ - <triton_sd_config> ... ]

  # List of Uyuni service discovery configurations.
  uyuni_sd_configs:
    [ - <uyuni_sd_config> ... ]

  # List of labeled statically configured targets for this job.
  static_configs:
    [ - <static_config> ... ]
    # The targets specified by the static config.
    targets:
      [ - '<host>' ]

    # Labels assigned to all metrics scraped from the targets.
    labels:
      [ <labelname>: <labelvalue> ... ]

  # List of target relabel configurations.
  relabel_configs:
    [ - <relabel_config> ... ]
    # The source labels select values from existing labels. Their content is concatenated
    # using the configured separator and matched against the configured regular expression
    # for the replace, keep, and drop actions.
    [ source_labels: '[' <labelname> [, ...] ']' ]

    # Separator placed between concatenated source label values.
    [ separator: <string> | default = ; ]

    # Label to which the resulting value is written in a replace action.
    # It is mandatory for replace actions. Regex capture groups are available.
    [ target_label: <labelname> ]

    # Regular expression against which the extracted value is matched.
    [ regex: <regex> | default = (.*) ]

    # Modulus to take of the hash of the source label values.
    [ modulus: <int> ]

    # Replacement value against which a regex replace is performed if the
    # regular expression matches. Regex capture groups are available.
    [ replacement: <string> | default = $1 ]

    # Action to perform based on regex matching.
    [ action: <relabel_action> | default = replace ]


  # List of metric relabel configurations.
  metric_relabel_configs:
    [ - <relabel_config> ... ]
    # The source labels select values from existing labels. Their content is concatenated
    # using the configured separator and matched against the configured regular expression
    # for the replace, keep, and drop actions.
    [ source_labels: '[' <labelname> [, ...] ']' ]

    # Separator placed between concatenated source label values.
    [ separator: <string> | default = ; ]

    # Label to which the resulting value is written in a replace action.
    # It is mandatory for replace actions. Regex capture groups are available.
    [ target_label: <labelname> ]

    # Regular expression against which the extracted value is matched.
    [ regex: <regex> | default = (.*) ]

    # Modulus to take of the hash of the source label values.
    [ modulus: <int> ]

    # Replacement value against which a regex replace is performed if the
    # regular expression matches. Regex capture groups are available.
    [ replacement: <string> | default = $1 ]

    # Action to perform based on regex matching.
    [ action: <relabel_action> | default = replace ]

  # An uncompressed response body larger than this many bytes will cause the
  # scrape to fail. 0 means no limit. Example: 100MB.
  # This is an experimental feature, this behaviour could
  # change or be removed in the future.
  [ body_size_limit: <size> | default = 0 ]
  # Per-scrape limit on number of scraped samples that will be accepted.
  # If more than this number of samples are present after metric relabeling
  # the entire scrape will be treated as failed. 0 means no limit.
  [ sample_limit: <int> | default = 0 ]

  # Per-scrape limit on number of labels that will be accepted for a sample. If
  # more than this number of labels are present post metric-relabeling, the
  # entire scrape will be treated as failed. 0 means no limit.
  [ label_limit: <int> | default = 0 ]

  # Per-scrape limit on length of labels name that will be accepted for a sample.
  # If a label name is longer than this number post metric-relabeling, the entire
  # scrape will be treated as failed. 0 means no limit.
  [ label_name_length_limit: <int> | default = 0 ]

  # Per-scrape limit on length of labels value that will be accepted for a sample.
  # If a label value is longer than this number post metric-relabeling, the
  # entire scrape will be treated as failed. 0 means no limit.
  [ label_value_length_limit: <int> | default = 0 ]

  # Per-scrape config limit on number of unique targets that will be
  # accepted. If more than this number of targets are present after target
  # relabeling, Prometheus will mark the targets as failed without scraping them.
  # 0 means no limit. This is an experimental feature, this behaviour could
  # change in the future.
  [ target_limit: <int> | default = 0 ]
#}
