---

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/prometheus.service.j2"
        dest: "{{ systemd_lib_directory }}/prometheus.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart prometheus

    - name: create prometheus run configuration
      ansible.builtin.template:
        src: "prometheus.j2"
        dest: "{{ prometheus_defaults_directory }}/prometheus"
        force: true
        owner: root
        group: "{{ prometheus_system_group }}"
        mode: 0640
      notify:
        - validate config
        - reload prometheus

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/prometheus.j2"
        dest: "/etc/conf.d/prometheus"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/prometheus.j2"
        dest: "/etc/init.d/prometheus"
        owner: root
        group: root
        mode: 0750

- name: create prometheus configuration directory
  ansible.builtin.file:
    path: "{{ prometheus_config_dir }}"
    state: directory
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0770

- name: create prometheus.yml
  ansible.builtin.template:
    src: prometheus/prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    force: true
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0640
  register: prometheus_config
  notify:
    - validate config
    - reload prometheus

- name: create (experimental) prometheus web configuration
  ansible.builtin.template:
    src: prometheus/web.yml.j2
    dest: "{{ prometheus_config_dir }}/web.yml"
    force: true
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0640
  when:
    - prometheus_enable_experimental
  notify:
    - reload prometheus

- name: create static targets
  ansible.builtin.template:
    src: prometheus/file_sd/item.yml.j2
    dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
    force: true
    owner: root
    group: "{{ prometheus_system_group }}"
    mode: 0640
  with_dict: "{{ prometheus_file_sd_targets }}"
  loop_control:
    label: "{{ item.key }}.yml"
  when:
    - prometheus_file_sd_targets is defined
    - prometheus_file_sd_targets | count > 0
  notify:
    - validate config
    - reload prometheus

- name: create alerting rules
  prometheus_alert_rules:
    rules: "{{ prometheus_alert_rules | jinja_encode }}"
    group: "{{ prometheus_system_group }}"
  register: _created_alert_rules
  when:
    - prometheus_alert_rules is defined
    - prometheus_alert_rules | count > 0
  notify:
    - summary of changes or failed
    - validate config
    - reload prometheus

- name: restart prometheus if needed
  ansible.builtin.meta: flush_handlers

...
