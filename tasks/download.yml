---

- name: checksum
  become: false
  delegate_to: localhost
  run_once: true
  block:
    - name: get checksum list
      github_checksum:
        project: prometheus
        repository: prometheus
        checksum_file: sha256sums.txt
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
        architecture: "{{ ansible_architecture }}"
        system: "{{ ansible_facts.system }}"
        version: "{{ prometheus_version }}"
      register: _latest_checksum

    - name: define checksum for {{ go_arch }} architecture
      ansible.builtin.set_fact:
        __prometheus_checksum: "{{ _latest_checksum.checksum }}"
      when:
        - _latest_checksum.rc == 0
        - _latest_checksum.checksum is defined
        - _latest_checksum.checksum | string | length > 0

# - name: checksum
#   become: false
#   delegate_to: localhost
#   run_once: true
#   block:
#     - name: get checksum list
#       ansible.builtin.set_fact:
#         __prometheus_checksums: "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"
#
#     - name: get checksum for {{ go_arch }} architecture
#       ansible.builtin.set_fact:
#         __prometheus_checksum: "{{ __prometheus_checksums | prometheus_checksum('linux', go_arch) }}"

- name: download prometheus binary archive
  become: false
  delegate_to: "{{ prometheus_delegate_to }}"
  run_once: "{{ 'false' if prometheus_direct_download else 'true' }}"
  ansible.builtin.get_url:
    url: "{{ prometheus_release_download_url }}/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: "{{ prometheus_local_tmp_directory }}/prometheus-linux-amd64.tar.gz"
    checksum: "sha256:{{ __prometheus_checksum }}"
    mode: 0640
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  check_mode: false

- name: extract prometheus archive
  become: false
  delegate_to: "{{ prometheus_delegate_to }}"
  run_once: "{{ 'false' if prometheus_direct_download else 'true' }}"
  ansible.builtin.unarchive:
    src: "{{ prometheus_local_tmp_directory }}/prometheus-linux-amd64.tar.gz"
    dest: "{{ prometheus_local_tmp_directory }}"
    copy: false
  register: _extract_archive

...
